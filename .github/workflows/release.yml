name: Semantic Release

on:
  issues:
    types: [milestoned]
jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    if: startsWith(github.event.issue.title, 'Release new version')

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Verify release permissions 
      uses: actions/github-script@0.9.0

      env:
        GITHUB_RUN_ID: ${{github.run_id}}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const result = await github.repos.getCollaboratorPermissionLevel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            username: context.actor,
          })
          if(result.data.permission !== 'admin') {
            throw Error("User does not have permissions to release only has permissions:" + result.data)
          }
    - name: Install dependencies and Semantic release
      run: |
        python -m pip install --upgrade pip
        pip install poetry 
        poetry install
    - name: Python Semantic Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PYPI_USERNAME: __token__
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        poetry install
        git config --local user.email "zcstarr@gmail.com"
        git config --local user.name "zcstarr"
        poetry run semantic-release publish 
    - name: Wrap up release triggering issue
      uses: actions/github-script@0.9.0
      env:
        GITHUB_RUN_ID: ${{github.run_id}}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          await github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Successfully released project'
          })
